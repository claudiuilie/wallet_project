<header class="masthead bg-wallet text-white text-center container  align-items-center flex-column" style="padding-top: 7em;padding-bottom: 2em; ">
            <div class="card text-center bg-white mb-2 "  name="{{pieData.month}}" value="{{pieData.year}}">
                <div class="card-header border-0">
                    <div class="input-group">
                        <form  method="post" class="btn-block" action="/wallet" >
                            <button class="btn btn-info dropdown-toggle btn-block" type="button"data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                {{{pieData.month}}} {{{pieData.year}}}
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 100%;text-align: center;">
                                <input type="hidden" class="form-control" name="year" value="{{pieData.year}}">
                                {{#each progressData.labels}}
                                    <input id="monthName" type="submit" class="form-control" name="month" value="{{this}}">
                                {{/each}}
                            </div>
                        </form>
                    </div>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="pieChart"></canvas>
                    </div>
                    <div class="chart-container" style=" height:50vh; width:100%">
                        <canvas id="extendedOutcomeChart"></canvas>
                    </div>
                </div>
                <div class="card-footer border-0">
                    <div class="pt-1 mb-2">
                        <a href="/wallet/create">
                            <button type="button" class="btn btn-success  btn-block">Add</button>
                        </a>
                    </div>
                    <div>
                        <form  id ="formData" method="GET" action="/wallet/edit" >
                            <input id="monthName" type="hidden" class="form-control" name="month" value="{{{pieData.month}}}">
                            <input type="hidden" class="form-control" name="year" value="{{{pieData.year}}}">
                            <button type="submit" class="btn btn-primary  btn-block " >Edit</button>
                        </form>
                    </div>
                    <div class="pt-2">
                        <form  id ="formData"  onsubmit="return deleteConfirmation()">
                            <input id="monthName" type="hidden" class="form-control" name="month" value="{{{pieData.month}}}">
                            <input type="hidden" class="form-control" name="year" value="{{{pieData.year}}}">
                            <button type="submit" class="btn btn-danger  btn-block " >Delete</button>
                        </form>
                    </div>
                </div>
            </div>
            <div class="card" style="width: 100%">
                <canvas id="evolutionChart"></canvas>
                <div class="card-body">
                </div>
            </div>

            <script src="/js/chart.js"></script>
            <script>

                var ctxPie = document.getElementById('pieChart');
                var pieChart = new Chart(ctxPie, {
                    type: 'doughnut',
                    data: {
                        labels: "{{pieData.labels}}".split(","),
                        datasets: [{
                            label: '# of Income',
                            data: [{{pieData.data}}],
                            backgroundColor: [
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(255, 159, 64, 0.2)'
                            ],
                            borderColor: [
                                'rgb(28,192,43)',
                                'rgba(255, 99, 132, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        title: {
                            display: false,
                            text: "{{{incomeList.month}}} {{{incomeList.year}}}"
                        },
                        tooltips: {
                            enabled: true
                        }
                    }
                });

                var outcomeLabels = "{{outcomeData.labels}}".split(",");

                if(outcomeLabels[0] != ''){
                    var ctxExtendedOutcome = document.getElementById('extendedOutcomeChart');
                    var extendedChart = new Chart(ctxExtendedOutcome, {
                        type: 'horizontalBar',
                        data: {
                            labels: "{{outcomeData.labels}}".split(","),
                            datasets: [{
                                label: "Outcome details",
                                data: [{{outcomeData.data}}],
                                backgroundColor:'rgba(255, 99, 132, 0.2)',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                yAxes: [{
                                    offset: true,
                                    ticks: {
                                        beginAtZero: true,
                                        minRotation: 0,
                                        maxRotation: 50,
                                        mirror: false,
                                        padding: 0,
                                        reverse: false,
                                        display: true,
                                        autoSkip: false,
                                        autoSkipPadding: 0,
                                        labelOffset: 0
                                    },
                                    gridLines: {
                                        display: false
                                    }
                                }],
                                xAxes: [{
                                    gridLines: {
                                        display: false
                                    }
                                }]
                            }
                        }
                    });
                }else{
                    document.getElementById('extendedOutcomeChart').parentElement.remove()
                }

                var ctxGraph = document.getElementById('evolutionChart');
                var monthlyChart = new Chart(ctxGraph, {
                    type: 'line',
                    data: {
                        labels: "{{progressData.labels}}".split(",").reverse(),
                        datasets: [{
                            label: `Income evolution ${new Date().getFullYear()}`,
                            backgroundColor:'rgba(0,192,116,0.2)',
                            borderColor:'rgb(28,192,43)',
                            borderWidth: 1,
                            data: [{{progressData.data}}]
                        }]
                    },
                    options: {}
                });
            </script>
            <script>
                    function deleteConfirmation() {
                        var r = confirm("Press ok for confirmation.");
                        if (r == true) {
                            $.ajax({
                                method: "POST",
                                url: "/wallet/delete",
                                data: { "year": '{{pieData.year}}' , "month": '{{pieData.month}}', "default": false}
                            }).done(function (data) {
                                if(data.affectedRows == 1){
                                    location.replace('/wallet');
                                }else{
                                    alert('Err')
                                }
                            })
                            return false;
                        }else{
                            return false;
                        }
                    }
                </script>
</header>



